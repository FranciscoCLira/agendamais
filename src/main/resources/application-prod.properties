# Configuração de produção
# IMPORTANT: production values should be provided via environment variables or a secret manager.
# The defaults below are placeholders and will NOT be suitable for a real production deployment.

# Datasource: prefer a real DB (Postgres, MySQL, etc.). Provide a full JDBC URL via
# SPRING_DATASOURCE_URL, and optional driver and credentials via the variables below.
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/agendadb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:agendadb}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.postgresql.Driver}

# JPA: keep validate in prod to avoid accidental schema changes. Change to 'none' only
# if you manage schema outside the application.
spring.jpa.hibernate.ddl-auto=validate

# Enable Flyway in production to run migrations on startup (ensure backups exist first).
spring.flyway.enabled=true

# Disable the H2 console in production
spring.h2.console.enabled=false

# Active profile
# NOTE: Do NOT set 'spring.profiles.active' inside a profile-specific file; the active profile is supplied
# at runtime (via environment, command line or container orchestration). This file contains production properties
# and will be used when the 'prod' profile is active.
# Server/logging/management
server.port=${SERVER_PORT:8080}
logging.level.org.springframework=INFO

# Management endpoints: only expose health and info by default
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized

# Mail configuration (values should come from env vars or secret store)
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}

# Email of the manager (used by the application)
gestor.email=${GESTOR_EMAIL:}

# Connection pool tuning (adjust as needed)
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_MAX_POOL:10}

# Notes:
# - Do NOT enable an H2 file-based DB for production. Use a managed DB service.
# - Make sure to provide a secure way to supply credentials (env vars, secret manager, or mounted files).
